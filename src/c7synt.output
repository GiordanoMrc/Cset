Não terminais inúteis na gramática

    set-stmt
    set-exp
    element-list
    set-op
    in-exp
    call
    args
    arg-list


Terminais sem uso na gramática

    I_PLUS
    D_MINUS
    NOT
    OR
    AND
    IF
    ELSE
    FOR
    FORALL
    IS_SET
    ADD
    IN
    REMOVE
    RETURN
    EXISTS
    OPENPARENT
    CLOSEPARENT
    OPENBRACES
    CLOSEBRACES
    SEMICOLON
    COMMA


Regras inúteis na gramática

   60 set-stmt: %empty

   61 set-exp: '{' element-list '}'

   62 element-list: %empty

   63 set-op: ADD '(' in-exp ')'
   64       | REMOVE '(' in-exp ')'
   65       | EXISTS '(' in-exp ')'

   66 in-exp: basic-exp IN expression

   67 call: ID '(' args ')'

   68 args: arg-list
   69     | %empty

   70 arg-list: expression
   71         | arg-list ',' expression


Regras inúteis no analisador por causa de conflitos

   31 return-stmt: %empty

   32 if-stmt: %empty

   33 for-stmt: %empty

   54 factor: '(' expression ')'
   55       | ID
   56       | constant

   57 constant: INTEGER_CONST
   58         | FLOAT_CONST
   59         | EMPTY_CONST


Estado 29 conflitos: 11 de deslocamento/redução, 22 de redução/redução
Estado 107 conflitos: 11 de deslocamento/redução, 22 de redução/redução


Gramática

    0 $accept: program $end

    1 program: declaration-list

    2 declaration-list: declaration-list declaration
    3                 | declaration

    4 declaration: function-definition
    5            | var-declaration

    6 var-declaration: type ID ';'

    7 function-definition: type ID '(' parameters ')' compound-stmt

    8 type: INT
    9     | FLOAT
   10     | SET
   11     | ELEM

   12 parameters: parameter-list
   13           | %empty

   14 parameter-list: parameter-declaration
   15               | parameter-list ',' parameter-declaration

   16 parameter-declaration: type ID

   17 compound-stmt: '{' var-decls local-stmt '}'

   18 var-decls: var-decls var-declaration
   19          | %empty

   20 local-stmt: local-stmt stmt
   21           | %empty

   22 stmt: io-stmt
   23     | return-stmt
   24     | compound-stmt
   25     | if-stmt
   26     | for-stmt
   27     | expression-stmt

   28 io-stmt: READ '(' ID ')' ';'
   29        | WRITE '(' ID ')' ';'
   30        | WRITELN '(' ID ')' ';'

   31 return-stmt: %empty

   32 if-stmt: %empty

   33 for-stmt: %empty

   34 expression-stmt: expression ';'
   35                | ';'

   36 expression: ID EQ expression
   37           | basic-exp

   38 basic-exp: add-exp
   39          | add-exp rel-op add-exp

   40 rel-op: EQ_TO
   41       | NEQ_TO
   42       | GT
   43       | LT
   44       | GTE
   45       | LTE

   46 add-exp: term
   47        | term add-op term

   48 add-op: PLUS
   49       | MINUS

   50 term: factor
   51     | term mul-op factor

   52 mul-op: MULT
   53       | DIV

   54 factor: '(' expression ')'
   55       | ID
   56       | constant

   57 constant: INTEGER_CONST
   58         | FLOAT_CONST
   59         | EMPTY_CONST


Terminais, com as regras onde eles aparecem

    $end (0) 0
    '(' (40) 7 28 29 30 54
    ')' (41) 7 28 29 30 54
    ',' (44) 15
    ';' (59) 6 28 29 30 34 35
    '{' (123) 17
    '}' (125) 17
    error (256)
    INT (258) 8
    FLOAT (259) 9
    ELEM (260) 11
    SET (261) 10
    INTEGER_CONST (262) 57
    FLOAT_CONST (263) 58
    EMPTY_CONST (264) 59
    PLUS (265) 48
    MINUS (266) 49
    DIV (267) 53
    MULT (268) 52
    EQ (269) 36
    I_PLUS (270)
    D_MINUS (271)
    NOT (272)
    OR (273)
    AND (274)
    EQ_TO (275) 40
    NEQ_TO (276) 41
    GT (277) 42
    LT (278) 43
    GTE (279) 44
    LTE (280) 45
    IF (281)
    ELSE (282)
    FOR (283)
    FORALL (284)
    IS_SET (285)
    ADD (286)
    IN (287)
    REMOVE (288)
    RETURN (289)
    EXISTS (290)
    OPENPARENT (291)
    CLOSEPARENT (292)
    OPENBRACES (293)
    CLOSEBRACES (294)
    SEMICOLON (295)
    COMMA (296)
    READ (297) 28
    WRITE (298) 29
    WRITELN (299) 30
    ID (300) 6 7 16 28 29 30 36 55


Não terminais com as regras onde eles aparecem

    $accept (52)
        à esquerda: 0
    program (53)
        à esquerda: 1
        à direita: 0
    declaration-list (54)
        à esquerda: 2 3
        à direita: 1 2
    declaration (55)
        à esquerda: 4 5
        à direita: 2 3
    var-declaration (56)
        à esquerda: 6
        à direita: 5 18
    function-definition (57)
        à esquerda: 7
        à direita: 4
    type (58)
        à esquerda: 8 9 10 11
        à direita: 6 7 16
    parameters (59)
        à esquerda: 12 13
        à direita: 7
    parameter-list (60)
        à esquerda: 14 15
        à direita: 12 15
    parameter-declaration (61)
        à esquerda: 16
        à direita: 14 15
    compound-stmt (62)
        à esquerda: 17
        à direita: 7 24
    var-decls (63)
        à esquerda: 18 19
        à direita: 17 18
    local-stmt (64)
        à esquerda: 20 21
        à direita: 17 20
    stmt (65)
        à esquerda: 22 23 24 25 26 27
        à direita: 20
    io-stmt (66)
        à esquerda: 28 29 30
        à direita: 22
    return-stmt (67)
        à esquerda: 31
        à direita: 23
    if-stmt (68)
        à esquerda: 32
        à direita: 25
    for-stmt (69)
        à esquerda: 33
        à direita: 26
    expression-stmt (70)
        à esquerda: 34 35
        à direita: 27
    expression (71)
        à esquerda: 36 37
        à direita: 34 36 54
    basic-exp (72)
        à esquerda: 38 39
        à direita: 37
    rel-op (73)
        à esquerda: 40 41 42 43 44 45
        à direita: 39
    add-exp (74)
        à esquerda: 46 47
        à direita: 38 39
    add-op (75)
        à esquerda: 48 49
        à direita: 47
    term (76)
        à esquerda: 50 51
        à direita: 46 47 51
    mul-op (77)
        à esquerda: 52 53
        à direita: 51
    factor (78)
        à esquerda: 54 55 56
        à direita: 50 51
    constant (79)
        à esquerda: 57 58 59
        à direita: 56


Estado 0

    0 $accept: . program $end

    INT    deslocar, e ir ao estado 1
    FLOAT  deslocar, e ir ao estado 2
    ELEM   deslocar, e ir ao estado 3
    SET    deslocar, e ir ao estado 4

    program              ir ao estado 5
    declaration-list     ir ao estado 6
    declaration          ir ao estado 7
    var-declaration      ir ao estado 8
    function-definition  ir ao estado 9
    type                 ir ao estado 10


Estado 1

    8 type: INT .

    ID  reduzir usando a regra 8 (type)


Estado 2

    9 type: FLOAT .

    ID  reduzir usando a regra 9 (type)


Estado 3

   11 type: ELEM .

    ID  reduzir usando a regra 11 (type)


Estado 4

   10 type: SET .

    ID  reduzir usando a regra 10 (type)


Estado 5

    0 $accept: program . $end

    $end  deslocar, e ir ao estado 11


Estado 6

    1 program: declaration-list .
    2 declaration-list: declaration-list . declaration

    INT    deslocar, e ir ao estado 1
    FLOAT  deslocar, e ir ao estado 2
    ELEM   deslocar, e ir ao estado 3
    SET    deslocar, e ir ao estado 4

    $end  reduzir usando a regra 1 (program)

    declaration          ir ao estado 12
    var-declaration      ir ao estado 8
    function-definition  ir ao estado 9
    type                 ir ao estado 10


Estado 7

    3 declaration-list: declaration .

    $end   reduzir usando a regra 3 (declaration-list)
    INT    reduzir usando a regra 3 (declaration-list)
    FLOAT  reduzir usando a regra 3 (declaration-list)
    ELEM   reduzir usando a regra 3 (declaration-list)
    SET    reduzir usando a regra 3 (declaration-list)


Estado 8

    5 declaration: var-declaration .

    $end   reduzir usando a regra 5 (declaration)
    INT    reduzir usando a regra 5 (declaration)
    FLOAT  reduzir usando a regra 5 (declaration)
    ELEM   reduzir usando a regra 5 (declaration)
    SET    reduzir usando a regra 5 (declaration)


Estado 9

    4 declaration: function-definition .

    $end   reduzir usando a regra 4 (declaration)
    INT    reduzir usando a regra 4 (declaration)
    FLOAT  reduzir usando a regra 4 (declaration)
    ELEM   reduzir usando a regra 4 (declaration)
    SET    reduzir usando a regra 4 (declaration)


Estado 10

    6 var-declaration: type . ID ';'
    7 function-definition: type . ID '(' parameters ')' compound-stmt

    ID  deslocar, e ir ao estado 13


Estado 11

    0 $accept: program $end .

    $padrão  aceitar


Estado 12

    2 declaration-list: declaration-list declaration .

    $end   reduzir usando a regra 2 (declaration-list)
    INT    reduzir usando a regra 2 (declaration-list)
    FLOAT  reduzir usando a regra 2 (declaration-list)
    ELEM   reduzir usando a regra 2 (declaration-list)
    SET    reduzir usando a regra 2 (declaration-list)


Estado 13

    6 var-declaration: type ID . ';'
    7 function-definition: type ID . '(' parameters ')' compound-stmt

    ';'  deslocar, e ir ao estado 14
    '('  deslocar, e ir ao estado 15


Estado 14

    6 var-declaration: type ID ';' .

    $end   reduzir usando a regra 6 (var-declaration)
    INT    reduzir usando a regra 6 (var-declaration)
    FLOAT  reduzir usando a regra 6 (var-declaration)
    ELEM   reduzir usando a regra 6 (var-declaration)
    SET    reduzir usando a regra 6 (var-declaration)


Estado 15

    7 function-definition: type ID '(' . parameters ')' compound-stmt

    INT    deslocar, e ir ao estado 1
    FLOAT  deslocar, e ir ao estado 2
    ELEM   deslocar, e ir ao estado 3
    SET    deslocar, e ir ao estado 4

    ')'  reduzir usando a regra 13 (parameters)

    type                   ir ao estado 16
    parameters             ir ao estado 17
    parameter-list         ir ao estado 18
    parameter-declaration  ir ao estado 19


Estado 16

   16 parameter-declaration: type . ID

    ID  deslocar, e ir ao estado 20


Estado 17

    7 function-definition: type ID '(' parameters . ')' compound-stmt

    ')'  deslocar, e ir ao estado 21


Estado 18

   12 parameters: parameter-list .
   15 parameter-list: parameter-list . ',' parameter-declaration

    ','  deslocar, e ir ao estado 22

    ')'  reduzir usando a regra 12 (parameters)


Estado 19

   14 parameter-list: parameter-declaration .

    ')'  reduzir usando a regra 14 (parameter-list)
    ','  reduzir usando a regra 14 (parameter-list)


Estado 20

   16 parameter-declaration: type ID .

    ')'  reduzir usando a regra 16 (parameter-declaration)
    ','  reduzir usando a regra 16 (parameter-declaration)


Estado 21

    7 function-definition: type ID '(' parameters ')' . compound-stmt

    '{'  deslocar, e ir ao estado 23

    compound-stmt  ir ao estado 24


Estado 22

   15 parameter-list: parameter-list ',' . parameter-declaration

    INT    deslocar, e ir ao estado 1
    FLOAT  deslocar, e ir ao estado 2
    ELEM   deslocar, e ir ao estado 3
    SET    deslocar, e ir ao estado 4

    type                   ir ao estado 16
    parameter-declaration  ir ao estado 25


Estado 23

   17 compound-stmt: '{' . var-decls local-stmt '}'

    INT            reduzir usando a regra 19 (var-decls)
    FLOAT          reduzir usando a regra 19 (var-decls)
    ELEM           reduzir usando a regra 19 (var-decls)
    SET            reduzir usando a regra 19 (var-decls)
    INTEGER_CONST  reduzir usando a regra 19 (var-decls)
    FLOAT_CONST    reduzir usando a regra 19 (var-decls)
    EMPTY_CONST    reduzir usando a regra 19 (var-decls)
    READ           reduzir usando a regra 19 (var-decls)
    WRITE          reduzir usando a regra 19 (var-decls)
    WRITELN        reduzir usando a regra 19 (var-decls)
    ID             reduzir usando a regra 19 (var-decls)
    ';'            reduzir usando a regra 19 (var-decls)
    '('            reduzir usando a regra 19 (var-decls)
    '{'            reduzir usando a regra 19 (var-decls)
    '}'            reduzir usando a regra 19 (var-decls)

    var-decls  ir ao estado 26


Estado 24

    7 function-definition: type ID '(' parameters ')' compound-stmt .

    $end   reduzir usando a regra 7 (function-definition)
    INT    reduzir usando a regra 7 (function-definition)
    FLOAT  reduzir usando a regra 7 (function-definition)
    ELEM   reduzir usando a regra 7 (function-definition)
    SET    reduzir usando a regra 7 (function-definition)


Estado 25

   15 parameter-list: parameter-list ',' parameter-declaration .

    ')'  reduzir usando a regra 15 (parameter-list)
    ','  reduzir usando a regra 15 (parameter-list)


Estado 26

   17 compound-stmt: '{' var-decls . local-stmt '}'
   18 var-decls: var-decls . var-declaration

    INT    deslocar, e ir ao estado 1
    FLOAT  deslocar, e ir ao estado 2
    ELEM   deslocar, e ir ao estado 3
    SET    deslocar, e ir ao estado 4

    INTEGER_CONST  reduzir usando a regra 21 (local-stmt)
    FLOAT_CONST    reduzir usando a regra 21 (local-stmt)
    EMPTY_CONST    reduzir usando a regra 21 (local-stmt)
    READ           reduzir usando a regra 21 (local-stmt)
    WRITE          reduzir usando a regra 21 (local-stmt)
    WRITELN        reduzir usando a regra 21 (local-stmt)
    ID             reduzir usando a regra 21 (local-stmt)
    ';'            reduzir usando a regra 21 (local-stmt)
    '('            reduzir usando a regra 21 (local-stmt)
    '{'            reduzir usando a regra 21 (local-stmt)
    '}'            reduzir usando a regra 21 (local-stmt)

    var-declaration  ir ao estado 27
    type             ir ao estado 28
    local-stmt       ir ao estado 29


Estado 27

   18 var-decls: var-decls var-declaration .

    INT            reduzir usando a regra 18 (var-decls)
    FLOAT          reduzir usando a regra 18 (var-decls)
    ELEM           reduzir usando a regra 18 (var-decls)
    SET            reduzir usando a regra 18 (var-decls)
    INTEGER_CONST  reduzir usando a regra 18 (var-decls)
    FLOAT_CONST    reduzir usando a regra 18 (var-decls)
    EMPTY_CONST    reduzir usando a regra 18 (var-decls)
    READ           reduzir usando a regra 18 (var-decls)
    WRITE          reduzir usando a regra 18 (var-decls)
    WRITELN        reduzir usando a regra 18 (var-decls)
    ID             reduzir usando a regra 18 (var-decls)
    ';'            reduzir usando a regra 18 (var-decls)
    '('            reduzir usando a regra 18 (var-decls)
    '{'            reduzir usando a regra 18 (var-decls)
    '}'            reduzir usando a regra 18 (var-decls)


Estado 28

    6 var-declaration: type . ID ';'

    ID  deslocar, e ir ao estado 30


Estado 29

   17 compound-stmt: '{' var-decls local-stmt . '}'
   20 local-stmt: local-stmt . stmt

    INTEGER_CONST  deslocar, e ir ao estado 31
    FLOAT_CONST    deslocar, e ir ao estado 32
    EMPTY_CONST    deslocar, e ir ao estado 33
    READ           deslocar, e ir ao estado 34
    WRITE          deslocar, e ir ao estado 35
    WRITELN        deslocar, e ir ao estado 36
    ID             deslocar, e ir ao estado 37
    ';'            deslocar, e ir ao estado 38
    '('            deslocar, e ir ao estado 39
    '{'            deslocar, e ir ao estado 88
    '}'            deslocar, e ir ao estado 40

    INTEGER_CONST  [reduzir usando a regra 31 (return-stmt)]
    INTEGER_CONST  [reduzir usando a regra 32 (if-stmt)]
    INTEGER_CONST  [reduzir usando a regra 33 (for-stmt)]
    FLOAT_CONST    [reduzir usando a regra 31 (return-stmt)]
    FLOAT_CONST    [reduzir usando a regra 32 (if-stmt)]
    FLOAT_CONST    [reduzir usando a regra 33 (for-stmt)]
    EMPTY_CONST    [reduzir usando a regra 31 (return-stmt)]
    EMPTY_CONST    [reduzir usando a regra 32 (if-stmt)]
    EMPTY_CONST    [reduzir usando a regra 33 (for-stmt)]
    READ           [reduzir usando a regra 31 (return-stmt)]
    READ           [reduzir usando a regra 32 (if-stmt)]
    READ           [reduzir usando a regra 33 (for-stmt)]
    WRITE          [reduzir usando a regra 31 (return-stmt)]
    WRITE          [reduzir usando a regra 32 (if-stmt)]
    WRITE          [reduzir usando a regra 33 (for-stmt)]
    WRITELN        [reduzir usando a regra 31 (return-stmt)]
    WRITELN        [reduzir usando a regra 32 (if-stmt)]
    WRITELN        [reduzir usando a regra 33 (for-stmt)]
    ID             [reduzir usando a regra 31 (return-stmt)]
    ID             [reduzir usando a regra 32 (if-stmt)]
    ID             [reduzir usando a regra 33 (for-stmt)]
    ';'            [reduzir usando a regra 31 (return-stmt)]
    ';'            [reduzir usando a regra 32 (if-stmt)]
    ';'            [reduzir usando a regra 33 (for-stmt)]
    '('            [reduzir usando a regra 31 (return-stmt)]
    '('            [reduzir usando a regra 32 (if-stmt)]
    '('            [reduzir usando a regra 33 (for-stmt)]
    '{'            [reduzir usando a regra 31 (return-stmt)]
    '{'            [reduzir usando a regra 32 (if-stmt)]
    '{'            [reduzir usando a regra 33 (for-stmt)]
    '}'            [reduzir usando a regra 31 (return-stmt)]
    '}'            [reduzir usando a regra 32 (if-stmt)]
    '}'            [reduzir usando a regra 33 (for-stmt)]

    compound-stmt    ir ao estado 41
    stmt             ir ao estado 42
    io-stmt          ir ao estado 43
    return-stmt      ir ao estado 44
    if-stmt          ir ao estado 45
    for-stmt         ir ao estado 46
    expression-stmt  ir ao estado 47
    expression       ir ao estado 48
    basic-exp        ir ao estado 49
    add-exp          ir ao estado 50
    term             ir ao estado 51
    factor           ir ao estado 52
    constant         ir ao estado 53


Estado 30

    6 var-declaration: type ID . ';'

    ';'  deslocar, e ir ao estado 89


Estado 31

   57 constant: INTEGER_CONST .


Estado 32

   58 constant: FLOAT_CONST .


Estado 33

   59 constant: EMPTY_CONST .


Estado 34

   28 io-stmt: READ . '(' ID ')' ';'

    '('  deslocar, e ir ao estado 54


Estado 35

   29 io-stmt: WRITE . '(' ID ')' ';'

    '('  deslocar, e ir ao estado 55


Estado 36

   30 io-stmt: WRITELN . '(' ID ')' ';'

    '('  deslocar, e ir ao estado 56


Estado 37

   36 expression: ID . EQ expression
   55 factor: ID .

    EQ  deslocar, e ir ao estado 57


Estado 38

   35 expression-stmt: ';' .

    INTEGER_CONST  reduzir usando a regra 35 (expression-stmt)
    FLOAT_CONST    reduzir usando a regra 35 (expression-stmt)
    EMPTY_CONST    reduzir usando a regra 35 (expression-stmt)
    READ           reduzir usando a regra 35 (expression-stmt)
    WRITE          reduzir usando a regra 35 (expression-stmt)
    WRITELN        reduzir usando a regra 35 (expression-stmt)
    ID             reduzir usando a regra 35 (expression-stmt)
    ';'            reduzir usando a regra 35 (expression-stmt)
    '('            reduzir usando a regra 35 (expression-stmt)
    '{'            reduzir usando a regra 35 (expression-stmt)
    '}'            reduzir usando a regra 35 (expression-stmt)


Estado 39

   54 factor: '(' . expression ')'

    INTEGER_CONST  deslocar, e ir ao estado 31
    FLOAT_CONST    deslocar, e ir ao estado 32
    EMPTY_CONST    deslocar, e ir ao estado 33
    ID             deslocar, e ir ao estado 90
    '('            deslocar, e ir ao estado 39

    expression  ir ao estado 58
    basic-exp   ir ao estado 91
    add-exp     ir ao estado 92
    term        ir ao estado 93
    factor      ir ao estado 94
    constant    ir ao estado 53


Estado 40

   17 compound-stmt: '{' var-decls local-stmt '}' .

    $end   reduzir usando a regra 17 (compound-stmt)
    INT    reduzir usando a regra 17 (compound-stmt)
    FLOAT  reduzir usando a regra 17 (compound-stmt)
    ELEM   reduzir usando a regra 17 (compound-stmt)
    SET    reduzir usando a regra 17 (compound-stmt)


Estado 41

   24 stmt: compound-stmt .

    INTEGER_CONST  reduzir usando a regra 24 (stmt)
    FLOAT_CONST    reduzir usando a regra 24 (stmt)
    EMPTY_CONST    reduzir usando a regra 24 (stmt)
    READ           reduzir usando a regra 24 (stmt)
    WRITE          reduzir usando a regra 24 (stmt)
    WRITELN        reduzir usando a regra 24 (stmt)
    ID             reduzir usando a regra 24 (stmt)
    ';'            reduzir usando a regra 24 (stmt)
    '('            reduzir usando a regra 24 (stmt)
    '{'            reduzir usando a regra 24 (stmt)
    '}'            reduzir usando a regra 24 (stmt)


Estado 42

   20 local-stmt: local-stmt stmt .

    INTEGER_CONST  reduzir usando a regra 20 (local-stmt)
    FLOAT_CONST    reduzir usando a regra 20 (local-stmt)
    EMPTY_CONST    reduzir usando a regra 20 (local-stmt)
    READ           reduzir usando a regra 20 (local-stmt)
    WRITE          reduzir usando a regra 20 (local-stmt)
    WRITELN        reduzir usando a regra 20 (local-stmt)
    ID             reduzir usando a regra 20 (local-stmt)
    ';'            reduzir usando a regra 20 (local-stmt)
    '('            reduzir usando a regra 20 (local-stmt)
    '{'            reduzir usando a regra 20 (local-stmt)
    '}'            reduzir usando a regra 20 (local-stmt)


Estado 43

   22 stmt: io-stmt .

    INTEGER_CONST  reduzir usando a regra 22 (stmt)
    FLOAT_CONST    reduzir usando a regra 22 (stmt)
    EMPTY_CONST    reduzir usando a regra 22 (stmt)
    READ           reduzir usando a regra 22 (stmt)
    WRITE          reduzir usando a regra 22 (stmt)
    WRITELN        reduzir usando a regra 22 (stmt)
    ID             reduzir usando a regra 22 (stmt)
    ';'            reduzir usando a regra 22 (stmt)
    '('            reduzir usando a regra 22 (stmt)
    '{'            reduzir usando a regra 22 (stmt)
    '}'            reduzir usando a regra 22 (stmt)


Estado 44

   23 stmt: return-stmt .

    INTEGER_CONST  reduzir usando a regra 23 (stmt)
    FLOAT_CONST    reduzir usando a regra 23 (stmt)
    EMPTY_CONST    reduzir usando a regra 23 (stmt)
    READ           reduzir usando a regra 23 (stmt)
    WRITE          reduzir usando a regra 23 (stmt)
    WRITELN        reduzir usando a regra 23 (stmt)
    ID             reduzir usando a regra 23 (stmt)
    ';'            reduzir usando a regra 23 (stmt)
    '('            reduzir usando a regra 23 (stmt)
    '{'            reduzir usando a regra 23 (stmt)
    '}'            reduzir usando a regra 23 (stmt)


Estado 45

   25 stmt: if-stmt .

    INTEGER_CONST  reduzir usando a regra 25 (stmt)
    FLOAT_CONST    reduzir usando a regra 25 (stmt)
    EMPTY_CONST    reduzir usando a regra 25 (stmt)
    READ           reduzir usando a regra 25 (stmt)
    WRITE          reduzir usando a regra 25 (stmt)
    WRITELN        reduzir usando a regra 25 (stmt)
    ID             reduzir usando a regra 25 (stmt)
    ';'            reduzir usando a regra 25 (stmt)
    '('            reduzir usando a regra 25 (stmt)
    '{'            reduzir usando a regra 25 (stmt)
    '}'            reduzir usando a regra 25 (stmt)


Estado 46

   26 stmt: for-stmt .

    INTEGER_CONST  reduzir usando a regra 26 (stmt)
    FLOAT_CONST    reduzir usando a regra 26 (stmt)
    EMPTY_CONST    reduzir usando a regra 26 (stmt)
    READ           reduzir usando a regra 26 (stmt)
    WRITE          reduzir usando a regra 26 (stmt)
    WRITELN        reduzir usando a regra 26 (stmt)
    ID             reduzir usando a regra 26 (stmt)
    ';'            reduzir usando a regra 26 (stmt)
    '('            reduzir usando a regra 26 (stmt)
    '{'            reduzir usando a regra 26 (stmt)
    '}'            reduzir usando a regra 26 (stmt)


Estado 47

   27 stmt: expression-stmt .

    INTEGER_CONST  reduzir usando a regra 27 (stmt)
    FLOAT_CONST    reduzir usando a regra 27 (stmt)
    EMPTY_CONST    reduzir usando a regra 27 (stmt)
    READ           reduzir usando a regra 27 (stmt)
    WRITE          reduzir usando a regra 27 (stmt)
    WRITELN        reduzir usando a regra 27 (stmt)
    ID             reduzir usando a regra 27 (stmt)
    ';'            reduzir usando a regra 27 (stmt)
    '('            reduzir usando a regra 27 (stmt)
    '{'            reduzir usando a regra 27 (stmt)
    '}'            reduzir usando a regra 27 (stmt)


Estado 48

   34 expression-stmt: expression . ';'

    ';'  deslocar, e ir ao estado 59


Estado 49

   37 expression: basic-exp .

    ';'  reduzir usando a regra 37 (expression)


Estado 50

   38 basic-exp: add-exp .
   39          | add-exp . rel-op add-exp

    EQ_TO   deslocar, e ir ao estado 60
    NEQ_TO  deslocar, e ir ao estado 61
    GT      deslocar, e ir ao estado 62
    LT      deslocar, e ir ao estado 63
    GTE     deslocar, e ir ao estado 64
    LTE     deslocar, e ir ao estado 65

    ';'  reduzir usando a regra 38 (basic-exp)

    rel-op  ir ao estado 66


Estado 51

   46 add-exp: term .
   47        | term . add-op term
   51 term: term . mul-op factor

    PLUS   deslocar, e ir ao estado 67
    MINUS  deslocar, e ir ao estado 68
    DIV    deslocar, e ir ao estado 69
    MULT   deslocar, e ir ao estado 70

    EQ_TO   reduzir usando a regra 46 (add-exp)
    NEQ_TO  reduzir usando a regra 46 (add-exp)
    GT      reduzir usando a regra 46 (add-exp)
    LT      reduzir usando a regra 46 (add-exp)
    GTE     reduzir usando a regra 46 (add-exp)
    LTE     reduzir usando a regra 46 (add-exp)
    ';'     reduzir usando a regra 46 (add-exp)

    add-op  ir ao estado 71
    mul-op  ir ao estado 72


Estado 52

   50 term: factor .

    PLUS    reduzir usando a regra 50 (term)
    MINUS   reduzir usando a regra 50 (term)
    DIV     reduzir usando a regra 50 (term)
    MULT    reduzir usando a regra 50 (term)
    EQ_TO   reduzir usando a regra 50 (term)
    NEQ_TO  reduzir usando a regra 50 (term)
    GT      reduzir usando a regra 50 (term)
    LT      reduzir usando a regra 50 (term)
    GTE     reduzir usando a regra 50 (term)
    LTE     reduzir usando a regra 50 (term)
    ';'     reduzir usando a regra 50 (term)


Estado 53

   56 factor: constant .


Estado 54

   28 io-stmt: READ '(' . ID ')' ';'

    ID  deslocar, e ir ao estado 73


Estado 55

   29 io-stmt: WRITE '(' . ID ')' ';'

    ID  deslocar, e ir ao estado 74


Estado 56

   30 io-stmt: WRITELN '(' . ID ')' ';'

    ID  deslocar, e ir ao estado 75


Estado 57

   36 expression: ID EQ . expression

    INTEGER_CONST  deslocar, e ir ao estado 31
    FLOAT_CONST    deslocar, e ir ao estado 32
    EMPTY_CONST    deslocar, e ir ao estado 33
    ID             deslocar, e ir ao estado 37
    '('            deslocar, e ir ao estado 39

    expression  ir ao estado 76
    basic-exp   ir ao estado 49
    add-exp     ir ao estado 50
    term        ir ao estado 51
    factor      ir ao estado 52
    constant    ir ao estado 53


Estado 58

   54 factor: '(' expression . ')'

    ')'  deslocar, e ir ao estado 77


Estado 59

   34 expression-stmt: expression ';' .

    INTEGER_CONST  reduzir usando a regra 34 (expression-stmt)
    FLOAT_CONST    reduzir usando a regra 34 (expression-stmt)
    EMPTY_CONST    reduzir usando a regra 34 (expression-stmt)
    READ           reduzir usando a regra 34 (expression-stmt)
    WRITE          reduzir usando a regra 34 (expression-stmt)
    WRITELN        reduzir usando a regra 34 (expression-stmt)
    ID             reduzir usando a regra 34 (expression-stmt)
    ';'            reduzir usando a regra 34 (expression-stmt)
    '('            reduzir usando a regra 34 (expression-stmt)
    '{'            reduzir usando a regra 34 (expression-stmt)
    '}'            reduzir usando a regra 34 (expression-stmt)


Estado 60

   40 rel-op: EQ_TO .

    INTEGER_CONST  reduzir usando a regra 40 (rel-op)
    FLOAT_CONST    reduzir usando a regra 40 (rel-op)
    EMPTY_CONST    reduzir usando a regra 40 (rel-op)
    ID             reduzir usando a regra 40 (rel-op)
    '('            reduzir usando a regra 40 (rel-op)


Estado 61

   41 rel-op: NEQ_TO .

    INTEGER_CONST  reduzir usando a regra 41 (rel-op)
    FLOAT_CONST    reduzir usando a regra 41 (rel-op)
    EMPTY_CONST    reduzir usando a regra 41 (rel-op)
    ID             reduzir usando a regra 41 (rel-op)
    '('            reduzir usando a regra 41 (rel-op)


Estado 62

   42 rel-op: GT .

    INTEGER_CONST  reduzir usando a regra 42 (rel-op)
    FLOAT_CONST    reduzir usando a regra 42 (rel-op)
    EMPTY_CONST    reduzir usando a regra 42 (rel-op)
    ID             reduzir usando a regra 42 (rel-op)
    '('            reduzir usando a regra 42 (rel-op)


Estado 63

   43 rel-op: LT .

    INTEGER_CONST  reduzir usando a regra 43 (rel-op)
    FLOAT_CONST    reduzir usando a regra 43 (rel-op)
    EMPTY_CONST    reduzir usando a regra 43 (rel-op)
    ID             reduzir usando a regra 43 (rel-op)
    '('            reduzir usando a regra 43 (rel-op)


Estado 64

   44 rel-op: GTE .

    INTEGER_CONST  reduzir usando a regra 44 (rel-op)
    FLOAT_CONST    reduzir usando a regra 44 (rel-op)
    EMPTY_CONST    reduzir usando a regra 44 (rel-op)
    ID             reduzir usando a regra 44 (rel-op)
    '('            reduzir usando a regra 44 (rel-op)


Estado 65

   45 rel-op: LTE .

    INTEGER_CONST  reduzir usando a regra 45 (rel-op)
    FLOAT_CONST    reduzir usando a regra 45 (rel-op)
    EMPTY_CONST    reduzir usando a regra 45 (rel-op)
    ID             reduzir usando a regra 45 (rel-op)
    '('            reduzir usando a regra 45 (rel-op)


Estado 66

   39 basic-exp: add-exp rel-op . add-exp

    INTEGER_CONST  deslocar, e ir ao estado 31
    FLOAT_CONST    deslocar, e ir ao estado 32
    EMPTY_CONST    deslocar, e ir ao estado 33
    ID             deslocar, e ir ao estado 78
    '('            deslocar, e ir ao estado 39

    add-exp   ir ao estado 79
    term      ir ao estado 95
    factor    ir ao estado 96
    constant  ir ao estado 53


Estado 67

   48 add-op: PLUS .

    INTEGER_CONST  reduzir usando a regra 48 (add-op)
    FLOAT_CONST    reduzir usando a regra 48 (add-op)
    EMPTY_CONST    reduzir usando a regra 48 (add-op)
    ID             reduzir usando a regra 48 (add-op)
    '('            reduzir usando a regra 48 (add-op)


Estado 68

   49 add-op: MINUS .

    INTEGER_CONST  reduzir usando a regra 49 (add-op)
    FLOAT_CONST    reduzir usando a regra 49 (add-op)
    EMPTY_CONST    reduzir usando a regra 49 (add-op)
    ID             reduzir usando a regra 49 (add-op)
    '('            reduzir usando a regra 49 (add-op)


Estado 69

   53 mul-op: DIV .

    INTEGER_CONST  reduzir usando a regra 53 (mul-op)
    FLOAT_CONST    reduzir usando a regra 53 (mul-op)
    EMPTY_CONST    reduzir usando a regra 53 (mul-op)
    ID             reduzir usando a regra 53 (mul-op)
    '('            reduzir usando a regra 53 (mul-op)


Estado 70

   52 mul-op: MULT .

    INTEGER_CONST  reduzir usando a regra 52 (mul-op)
    FLOAT_CONST    reduzir usando a regra 52 (mul-op)
    EMPTY_CONST    reduzir usando a regra 52 (mul-op)
    ID             reduzir usando a regra 52 (mul-op)
    '('            reduzir usando a regra 52 (mul-op)


Estado 71

   47 add-exp: term add-op . term

    INTEGER_CONST  deslocar, e ir ao estado 31
    FLOAT_CONST    deslocar, e ir ao estado 32
    EMPTY_CONST    deslocar, e ir ao estado 33
    ID             deslocar, e ir ao estado 78
    '('            deslocar, e ir ao estado 39

    term      ir ao estado 80
    factor    ir ao estado 97
    constant  ir ao estado 53


Estado 72

   51 term: term mul-op . factor

    INTEGER_CONST  deslocar, e ir ao estado 31
    FLOAT_CONST    deslocar, e ir ao estado 32
    EMPTY_CONST    deslocar, e ir ao estado 33
    ID             deslocar, e ir ao estado 78
    '('            deslocar, e ir ao estado 39

    factor    ir ao estado 81
    constant  ir ao estado 53


Estado 73

   28 io-stmt: READ '(' ID . ')' ';'

    ')'  deslocar, e ir ao estado 82


Estado 74

   29 io-stmt: WRITE '(' ID . ')' ';'

    ')'  deslocar, e ir ao estado 83


Estado 75

   30 io-stmt: WRITELN '(' ID . ')' ';'

    ')'  deslocar, e ir ao estado 84


Estado 76

   36 expression: ID EQ expression .

    ';'  reduzir usando a regra 36 (expression)


Estado 77

   54 factor: '(' expression ')' .


Estado 78

   55 factor: ID .


Estado 79

   39 basic-exp: add-exp rel-op add-exp .

    ';'  reduzir usando a regra 39 (basic-exp)


Estado 80

   47 add-exp: term add-op term .
   51 term: term . mul-op factor

    DIV   deslocar, e ir ao estado 69
    MULT  deslocar, e ir ao estado 70

    EQ_TO   reduzir usando a regra 47 (add-exp)
    NEQ_TO  reduzir usando a regra 47 (add-exp)
    GT      reduzir usando a regra 47 (add-exp)
    LT      reduzir usando a regra 47 (add-exp)
    GTE     reduzir usando a regra 47 (add-exp)
    LTE     reduzir usando a regra 47 (add-exp)
    ';'     reduzir usando a regra 47 (add-exp)

    mul-op  ir ao estado 98


Estado 81

   51 term: term mul-op factor .

    PLUS    reduzir usando a regra 51 (term)
    MINUS   reduzir usando a regra 51 (term)
    DIV     reduzir usando a regra 51 (term)
    MULT    reduzir usando a regra 51 (term)
    EQ_TO   reduzir usando a regra 51 (term)
    NEQ_TO  reduzir usando a regra 51 (term)
    GT      reduzir usando a regra 51 (term)
    LT      reduzir usando a regra 51 (term)
    GTE     reduzir usando a regra 51 (term)
    LTE     reduzir usando a regra 51 (term)
    ';'     reduzir usando a regra 51 (term)


Estado 82

   28 io-stmt: READ '(' ID ')' . ';'

    ';'  deslocar, e ir ao estado 85


Estado 83

   29 io-stmt: WRITE '(' ID ')' . ';'

    ';'  deslocar, e ir ao estado 86


Estado 84

   30 io-stmt: WRITELN '(' ID ')' . ';'

    ';'  deslocar, e ir ao estado 87


Estado 85

   28 io-stmt: READ '(' ID ')' ';' .

    INTEGER_CONST  reduzir usando a regra 28 (io-stmt)
    FLOAT_CONST    reduzir usando a regra 28 (io-stmt)
    EMPTY_CONST    reduzir usando a regra 28 (io-stmt)
    READ           reduzir usando a regra 28 (io-stmt)
    WRITE          reduzir usando a regra 28 (io-stmt)
    WRITELN        reduzir usando a regra 28 (io-stmt)
    ID             reduzir usando a regra 28 (io-stmt)
    ';'            reduzir usando a regra 28 (io-stmt)
    '('            reduzir usando a regra 28 (io-stmt)
    '{'            reduzir usando a regra 28 (io-stmt)
    '}'            reduzir usando a regra 28 (io-stmt)


Estado 86

   29 io-stmt: WRITE '(' ID ')' ';' .

    INTEGER_CONST  reduzir usando a regra 29 (io-stmt)
    FLOAT_CONST    reduzir usando a regra 29 (io-stmt)
    EMPTY_CONST    reduzir usando a regra 29 (io-stmt)
    READ           reduzir usando a regra 29 (io-stmt)
    WRITE          reduzir usando a regra 29 (io-stmt)
    WRITELN        reduzir usando a regra 29 (io-stmt)
    ID             reduzir usando a regra 29 (io-stmt)
    ';'            reduzir usando a regra 29 (io-stmt)
    '('            reduzir usando a regra 29 (io-stmt)
    '{'            reduzir usando a regra 29 (io-stmt)
    '}'            reduzir usando a regra 29 (io-stmt)


Estado 87

   30 io-stmt: WRITELN '(' ID ')' ';' .

    INTEGER_CONST  reduzir usando a regra 30 (io-stmt)
    FLOAT_CONST    reduzir usando a regra 30 (io-stmt)
    EMPTY_CONST    reduzir usando a regra 30 (io-stmt)
    READ           reduzir usando a regra 30 (io-stmt)
    WRITE          reduzir usando a regra 30 (io-stmt)
    WRITELN        reduzir usando a regra 30 (io-stmt)
    ID             reduzir usando a regra 30 (io-stmt)
    ';'            reduzir usando a regra 30 (io-stmt)
    '('            reduzir usando a regra 30 (io-stmt)
    '{'            reduzir usando a regra 30 (io-stmt)
    '}'            reduzir usando a regra 30 (io-stmt)


Estado 88

   17 compound-stmt: '{' . var-decls local-stmt '}'

    INT            reduzir usando a regra 19 (var-decls)
    FLOAT          reduzir usando a regra 19 (var-decls)
    ELEM           reduzir usando a regra 19 (var-decls)
    SET            reduzir usando a regra 19 (var-decls)
    INTEGER_CONST  reduzir usando a regra 19 (var-decls)
    FLOAT_CONST    reduzir usando a regra 19 (var-decls)
    EMPTY_CONST    reduzir usando a regra 19 (var-decls)
    READ           reduzir usando a regra 19 (var-decls)
    WRITE          reduzir usando a regra 19 (var-decls)
    WRITELN        reduzir usando a regra 19 (var-decls)
    ID             reduzir usando a regra 19 (var-decls)
    ';'            reduzir usando a regra 19 (var-decls)
    '('            reduzir usando a regra 19 (var-decls)
    '{'            reduzir usando a regra 19 (var-decls)
    '}'            reduzir usando a regra 19 (var-decls)

    var-decls  ir ao estado 99


Estado 89

    6 var-declaration: type ID ';' .

    INT            reduzir usando a regra 6 (var-declaration)
    FLOAT          reduzir usando a regra 6 (var-declaration)
    ELEM           reduzir usando a regra 6 (var-declaration)
    SET            reduzir usando a regra 6 (var-declaration)
    INTEGER_CONST  reduzir usando a regra 6 (var-declaration)
    FLOAT_CONST    reduzir usando a regra 6 (var-declaration)
    EMPTY_CONST    reduzir usando a regra 6 (var-declaration)
    READ           reduzir usando a regra 6 (var-declaration)
    WRITE          reduzir usando a regra 6 (var-declaration)
    WRITELN        reduzir usando a regra 6 (var-declaration)
    ID             reduzir usando a regra 6 (var-declaration)
    ';'            reduzir usando a regra 6 (var-declaration)
    '('            reduzir usando a regra 6 (var-declaration)
    '{'            reduzir usando a regra 6 (var-declaration)
    '}'            reduzir usando a regra 6 (var-declaration)


Estado 90

   36 expression: ID . EQ expression
   55 factor: ID .

    EQ  deslocar, e ir ao estado 100


Estado 91

   37 expression: basic-exp .

    ')'  reduzir usando a regra 37 (expression)


Estado 92

   38 basic-exp: add-exp .
   39          | add-exp . rel-op add-exp

    EQ_TO   deslocar, e ir ao estado 60
    NEQ_TO  deslocar, e ir ao estado 61
    GT      deslocar, e ir ao estado 62
    LT      deslocar, e ir ao estado 63
    GTE     deslocar, e ir ao estado 64
    LTE     deslocar, e ir ao estado 65

    ')'  reduzir usando a regra 38 (basic-exp)

    rel-op  ir ao estado 101


Estado 93

   46 add-exp: term .
   47        | term . add-op term
   51 term: term . mul-op factor

    PLUS   deslocar, e ir ao estado 67
    MINUS  deslocar, e ir ao estado 68
    DIV    deslocar, e ir ao estado 69
    MULT   deslocar, e ir ao estado 70

    EQ_TO   reduzir usando a regra 46 (add-exp)
    NEQ_TO  reduzir usando a regra 46 (add-exp)
    GT      reduzir usando a regra 46 (add-exp)
    LT      reduzir usando a regra 46 (add-exp)
    GTE     reduzir usando a regra 46 (add-exp)
    LTE     reduzir usando a regra 46 (add-exp)
    ')'     reduzir usando a regra 46 (add-exp)

    add-op  ir ao estado 102
    mul-op  ir ao estado 103


Estado 94

   50 term: factor .

    PLUS    reduzir usando a regra 50 (term)
    MINUS   reduzir usando a regra 50 (term)
    DIV     reduzir usando a regra 50 (term)
    MULT    reduzir usando a regra 50 (term)
    EQ_TO   reduzir usando a regra 50 (term)
    NEQ_TO  reduzir usando a regra 50 (term)
    GT      reduzir usando a regra 50 (term)
    LT      reduzir usando a regra 50 (term)
    GTE     reduzir usando a regra 50 (term)
    LTE     reduzir usando a regra 50 (term)
    ')'     reduzir usando a regra 50 (term)


Estado 95

   46 add-exp: term .
   47        | term . add-op term
   51 term: term . mul-op factor

    PLUS   deslocar, e ir ao estado 67
    MINUS  deslocar, e ir ao estado 68
    DIV    deslocar, e ir ao estado 69
    MULT   deslocar, e ir ao estado 70

    ';'  reduzir usando a regra 46 (add-exp)

    add-op  ir ao estado 104
    mul-op  ir ao estado 105


Estado 96

   50 term: factor .

    PLUS   reduzir usando a regra 50 (term)
    MINUS  reduzir usando a regra 50 (term)
    DIV    reduzir usando a regra 50 (term)
    MULT   reduzir usando a regra 50 (term)
    ';'    reduzir usando a regra 50 (term)


Estado 97

   50 term: factor .

    DIV     reduzir usando a regra 50 (term)
    MULT    reduzir usando a regra 50 (term)
    EQ_TO   reduzir usando a regra 50 (term)
    NEQ_TO  reduzir usando a regra 50 (term)
    GT      reduzir usando a regra 50 (term)
    LT      reduzir usando a regra 50 (term)
    GTE     reduzir usando a regra 50 (term)
    LTE     reduzir usando a regra 50 (term)
    ';'     reduzir usando a regra 50 (term)


Estado 98

   51 term: term mul-op . factor

    INTEGER_CONST  deslocar, e ir ao estado 31
    FLOAT_CONST    deslocar, e ir ao estado 32
    EMPTY_CONST    deslocar, e ir ao estado 33
    ID             deslocar, e ir ao estado 78
    '('            deslocar, e ir ao estado 39

    factor    ir ao estado 106
    constant  ir ao estado 53


Estado 99

   17 compound-stmt: '{' var-decls . local-stmt '}'
   18 var-decls: var-decls . var-declaration

    INT    deslocar, e ir ao estado 1
    FLOAT  deslocar, e ir ao estado 2
    ELEM   deslocar, e ir ao estado 3
    SET    deslocar, e ir ao estado 4

    INTEGER_CONST  reduzir usando a regra 21 (local-stmt)
    FLOAT_CONST    reduzir usando a regra 21 (local-stmt)
    EMPTY_CONST    reduzir usando a regra 21 (local-stmt)
    READ           reduzir usando a regra 21 (local-stmt)
    WRITE          reduzir usando a regra 21 (local-stmt)
    WRITELN        reduzir usando a regra 21 (local-stmt)
    ID             reduzir usando a regra 21 (local-stmt)
    ';'            reduzir usando a regra 21 (local-stmt)
    '('            reduzir usando a regra 21 (local-stmt)
    '{'            reduzir usando a regra 21 (local-stmt)
    '}'            reduzir usando a regra 21 (local-stmt)

    var-declaration  ir ao estado 27
    type             ir ao estado 28
    local-stmt       ir ao estado 107


Estado 100

   36 expression: ID EQ . expression

    INTEGER_CONST  deslocar, e ir ao estado 31
    FLOAT_CONST    deslocar, e ir ao estado 32
    EMPTY_CONST    deslocar, e ir ao estado 33
    ID             deslocar, e ir ao estado 90
    '('            deslocar, e ir ao estado 39

    expression  ir ao estado 108
    basic-exp   ir ao estado 91
    add-exp     ir ao estado 92
    term        ir ao estado 93
    factor      ir ao estado 94
    constant    ir ao estado 53


Estado 101

   39 basic-exp: add-exp rel-op . add-exp

    INTEGER_CONST  deslocar, e ir ao estado 31
    FLOAT_CONST    deslocar, e ir ao estado 32
    EMPTY_CONST    deslocar, e ir ao estado 33
    ID             deslocar, e ir ao estado 78
    '('            deslocar, e ir ao estado 39

    add-exp   ir ao estado 109
    term      ir ao estado 110
    factor    ir ao estado 111
    constant  ir ao estado 53


Estado 102

   47 add-exp: term add-op . term

    INTEGER_CONST  deslocar, e ir ao estado 31
    FLOAT_CONST    deslocar, e ir ao estado 32
    EMPTY_CONST    deslocar, e ir ao estado 33
    ID             deslocar, e ir ao estado 78
    '('            deslocar, e ir ao estado 39

    term      ir ao estado 112
    factor    ir ao estado 113
    constant  ir ao estado 53


Estado 103

   51 term: term mul-op . factor

    INTEGER_CONST  deslocar, e ir ao estado 31
    FLOAT_CONST    deslocar, e ir ao estado 32
    EMPTY_CONST    deslocar, e ir ao estado 33
    ID             deslocar, e ir ao estado 78
    '('            deslocar, e ir ao estado 39

    factor    ir ao estado 114
    constant  ir ao estado 53


Estado 104

   47 add-exp: term add-op . term

    INTEGER_CONST  deslocar, e ir ao estado 31
    FLOAT_CONST    deslocar, e ir ao estado 32
    EMPTY_CONST    deslocar, e ir ao estado 33
    ID             deslocar, e ir ao estado 78
    '('            deslocar, e ir ao estado 39

    term      ir ao estado 115
    factor    ir ao estado 116
    constant  ir ao estado 53


Estado 105

   51 term: term mul-op . factor

    INTEGER_CONST  deslocar, e ir ao estado 31
    FLOAT_CONST    deslocar, e ir ao estado 32
    EMPTY_CONST    deslocar, e ir ao estado 33
    ID             deslocar, e ir ao estado 78
    '('            deslocar, e ir ao estado 39

    factor    ir ao estado 117
    constant  ir ao estado 53


Estado 106

   51 term: term mul-op factor .

    DIV     reduzir usando a regra 51 (term)
    MULT    reduzir usando a regra 51 (term)
    EQ_TO   reduzir usando a regra 51 (term)
    NEQ_TO  reduzir usando a regra 51 (term)
    GT      reduzir usando a regra 51 (term)
    LT      reduzir usando a regra 51 (term)
    GTE     reduzir usando a regra 51 (term)
    LTE     reduzir usando a regra 51 (term)
    ';'     reduzir usando a regra 51 (term)


Estado 107

   17 compound-stmt: '{' var-decls local-stmt . '}'
   20 local-stmt: local-stmt . stmt

    INTEGER_CONST  deslocar, e ir ao estado 31
    FLOAT_CONST    deslocar, e ir ao estado 32
    EMPTY_CONST    deslocar, e ir ao estado 33
    READ           deslocar, e ir ao estado 34
    WRITE          deslocar, e ir ao estado 35
    WRITELN        deslocar, e ir ao estado 36
    ID             deslocar, e ir ao estado 37
    ';'            deslocar, e ir ao estado 38
    '('            deslocar, e ir ao estado 39
    '{'            deslocar, e ir ao estado 88
    '}'            deslocar, e ir ao estado 118

    INTEGER_CONST  [reduzir usando a regra 31 (return-stmt)]
    INTEGER_CONST  [reduzir usando a regra 32 (if-stmt)]
    INTEGER_CONST  [reduzir usando a regra 33 (for-stmt)]
    FLOAT_CONST    [reduzir usando a regra 31 (return-stmt)]
    FLOAT_CONST    [reduzir usando a regra 32 (if-stmt)]
    FLOAT_CONST    [reduzir usando a regra 33 (for-stmt)]
    EMPTY_CONST    [reduzir usando a regra 31 (return-stmt)]
    EMPTY_CONST    [reduzir usando a regra 32 (if-stmt)]
    EMPTY_CONST    [reduzir usando a regra 33 (for-stmt)]
    READ           [reduzir usando a regra 31 (return-stmt)]
    READ           [reduzir usando a regra 32 (if-stmt)]
    READ           [reduzir usando a regra 33 (for-stmt)]
    WRITE          [reduzir usando a regra 31 (return-stmt)]
    WRITE          [reduzir usando a regra 32 (if-stmt)]
    WRITE          [reduzir usando a regra 33 (for-stmt)]
    WRITELN        [reduzir usando a regra 31 (return-stmt)]
    WRITELN        [reduzir usando a regra 32 (if-stmt)]
    WRITELN        [reduzir usando a regra 33 (for-stmt)]
    ID             [reduzir usando a regra 31 (return-stmt)]
    ID             [reduzir usando a regra 32 (if-stmt)]
    ID             [reduzir usando a regra 33 (for-stmt)]
    ';'            [reduzir usando a regra 31 (return-stmt)]
    ';'            [reduzir usando a regra 32 (if-stmt)]
    ';'            [reduzir usando a regra 33 (for-stmt)]
    '('            [reduzir usando a regra 31 (return-stmt)]
    '('            [reduzir usando a regra 32 (if-stmt)]
    '('            [reduzir usando a regra 33 (for-stmt)]
    '{'            [reduzir usando a regra 31 (return-stmt)]
    '{'            [reduzir usando a regra 32 (if-stmt)]
    '{'            [reduzir usando a regra 33 (for-stmt)]
    '}'            [reduzir usando a regra 31 (return-stmt)]
    '}'            [reduzir usando a regra 32 (if-stmt)]
    '}'            [reduzir usando a regra 33 (for-stmt)]

    compound-stmt    ir ao estado 41
    stmt             ir ao estado 42
    io-stmt          ir ao estado 43
    return-stmt      ir ao estado 44
    if-stmt          ir ao estado 45
    for-stmt         ir ao estado 46
    expression-stmt  ir ao estado 47
    expression       ir ao estado 48
    basic-exp        ir ao estado 49
    add-exp          ir ao estado 50
    term             ir ao estado 51
    factor           ir ao estado 52
    constant         ir ao estado 53


Estado 108

   36 expression: ID EQ expression .

    ')'  reduzir usando a regra 36 (expression)


Estado 109

   39 basic-exp: add-exp rel-op add-exp .

    ')'  reduzir usando a regra 39 (basic-exp)


Estado 110

   46 add-exp: term .
   47        | term . add-op term
   51 term: term . mul-op factor

    PLUS   deslocar, e ir ao estado 67
    MINUS  deslocar, e ir ao estado 68
    DIV    deslocar, e ir ao estado 69
    MULT   deslocar, e ir ao estado 70

    ')'  reduzir usando a regra 46 (add-exp)

    add-op  ir ao estado 119
    mul-op  ir ao estado 120


Estado 111

   50 term: factor .

    PLUS   reduzir usando a regra 50 (term)
    MINUS  reduzir usando a regra 50 (term)
    DIV    reduzir usando a regra 50 (term)
    MULT   reduzir usando a regra 50 (term)
    ')'    reduzir usando a regra 50 (term)


Estado 112

   47 add-exp: term add-op term .
   51 term: term . mul-op factor

    DIV   deslocar, e ir ao estado 69
    MULT  deslocar, e ir ao estado 70

    EQ_TO   reduzir usando a regra 47 (add-exp)
    NEQ_TO  reduzir usando a regra 47 (add-exp)
    GT      reduzir usando a regra 47 (add-exp)
    LT      reduzir usando a regra 47 (add-exp)
    GTE     reduzir usando a regra 47 (add-exp)
    LTE     reduzir usando a regra 47 (add-exp)
    ')'     reduzir usando a regra 47 (add-exp)

    mul-op  ir ao estado 121


Estado 113

   50 term: factor .

    DIV     reduzir usando a regra 50 (term)
    MULT    reduzir usando a regra 50 (term)
    EQ_TO   reduzir usando a regra 50 (term)
    NEQ_TO  reduzir usando a regra 50 (term)
    GT      reduzir usando a regra 50 (term)
    LT      reduzir usando a regra 50 (term)
    GTE     reduzir usando a regra 50 (term)
    LTE     reduzir usando a regra 50 (term)
    ')'     reduzir usando a regra 50 (term)


Estado 114

   51 term: term mul-op factor .

    PLUS    reduzir usando a regra 51 (term)
    MINUS   reduzir usando a regra 51 (term)
    DIV     reduzir usando a regra 51 (term)
    MULT    reduzir usando a regra 51 (term)
    EQ_TO   reduzir usando a regra 51 (term)
    NEQ_TO  reduzir usando a regra 51 (term)
    GT      reduzir usando a regra 51 (term)
    LT      reduzir usando a regra 51 (term)
    GTE     reduzir usando a regra 51 (term)
    LTE     reduzir usando a regra 51 (term)
    ')'     reduzir usando a regra 51 (term)


Estado 115

   47 add-exp: term add-op term .
   51 term: term . mul-op factor

    DIV   deslocar, e ir ao estado 69
    MULT  deslocar, e ir ao estado 70

    ';'  reduzir usando a regra 47 (add-exp)

    mul-op  ir ao estado 122


Estado 116

   50 term: factor .

    DIV   reduzir usando a regra 50 (term)
    MULT  reduzir usando a regra 50 (term)
    ';'   reduzir usando a regra 50 (term)


Estado 117

   51 term: term mul-op factor .

    PLUS   reduzir usando a regra 51 (term)
    MINUS  reduzir usando a regra 51 (term)
    DIV    reduzir usando a regra 51 (term)
    MULT   reduzir usando a regra 51 (term)
    ';'    reduzir usando a regra 51 (term)


Estado 118

   17 compound-stmt: '{' var-decls local-stmt '}' .

    INTEGER_CONST  reduzir usando a regra 17 (compound-stmt)
    FLOAT_CONST    reduzir usando a regra 17 (compound-stmt)
    EMPTY_CONST    reduzir usando a regra 17 (compound-stmt)
    READ           reduzir usando a regra 17 (compound-stmt)
    WRITE          reduzir usando a regra 17 (compound-stmt)
    WRITELN        reduzir usando a regra 17 (compound-stmt)
    ID             reduzir usando a regra 17 (compound-stmt)
    ';'            reduzir usando a regra 17 (compound-stmt)
    '('            reduzir usando a regra 17 (compound-stmt)
    '{'            reduzir usando a regra 17 (compound-stmt)
    '}'            reduzir usando a regra 17 (compound-stmt)


Estado 119

   47 add-exp: term add-op . term

    INTEGER_CONST  deslocar, e ir ao estado 31
    FLOAT_CONST    deslocar, e ir ao estado 32
    EMPTY_CONST    deslocar, e ir ao estado 33
    ID             deslocar, e ir ao estado 78
    '('            deslocar, e ir ao estado 39

    term      ir ao estado 123
    factor    ir ao estado 124
    constant  ir ao estado 53


Estado 120

   51 term: term mul-op . factor

    INTEGER_CONST  deslocar, e ir ao estado 31
    FLOAT_CONST    deslocar, e ir ao estado 32
    EMPTY_CONST    deslocar, e ir ao estado 33
    ID             deslocar, e ir ao estado 78
    '('            deslocar, e ir ao estado 39

    factor    ir ao estado 125
    constant  ir ao estado 53


Estado 121

   51 term: term mul-op . factor

    INTEGER_CONST  deslocar, e ir ao estado 31
    FLOAT_CONST    deslocar, e ir ao estado 32
    EMPTY_CONST    deslocar, e ir ao estado 33
    ID             deslocar, e ir ao estado 78
    '('            deslocar, e ir ao estado 39

    factor    ir ao estado 126
    constant  ir ao estado 53


Estado 122

   51 term: term mul-op . factor

    INTEGER_CONST  deslocar, e ir ao estado 31
    FLOAT_CONST    deslocar, e ir ao estado 32
    EMPTY_CONST    deslocar, e ir ao estado 33
    ID             deslocar, e ir ao estado 78
    '('            deslocar, e ir ao estado 39

    factor    ir ao estado 127
    constant  ir ao estado 53


Estado 123

   47 add-exp: term add-op term .
   51 term: term . mul-op factor

    DIV   deslocar, e ir ao estado 69
    MULT  deslocar, e ir ao estado 70

    ')'  reduzir usando a regra 47 (add-exp)

    mul-op  ir ao estado 128


Estado 124

   50 term: factor .

    DIV   reduzir usando a regra 50 (term)
    MULT  reduzir usando a regra 50 (term)
    ')'   reduzir usando a regra 50 (term)


Estado 125

   51 term: term mul-op factor .

    PLUS   reduzir usando a regra 51 (term)
    MINUS  reduzir usando a regra 51 (term)
    DIV    reduzir usando a regra 51 (term)
    MULT   reduzir usando a regra 51 (term)
    ')'    reduzir usando a regra 51 (term)


Estado 126

   51 term: term mul-op factor .

    DIV     reduzir usando a regra 51 (term)
    MULT    reduzir usando a regra 51 (term)
    EQ_TO   reduzir usando a regra 51 (term)
    NEQ_TO  reduzir usando a regra 51 (term)
    GT      reduzir usando a regra 51 (term)
    LT      reduzir usando a regra 51 (term)
    GTE     reduzir usando a regra 51 (term)
    LTE     reduzir usando a regra 51 (term)
    ')'     reduzir usando a regra 51 (term)


Estado 127

   51 term: term mul-op factor .

    DIV   reduzir usando a regra 51 (term)
    MULT  reduzir usando a regra 51 (term)
    ';'   reduzir usando a regra 51 (term)


Estado 128

   51 term: term mul-op . factor

    INTEGER_CONST  deslocar, e ir ao estado 31
    FLOAT_CONST    deslocar, e ir ao estado 32
    EMPTY_CONST    deslocar, e ir ao estado 33
    ID             deslocar, e ir ao estado 78
    '('            deslocar, e ir ao estado 39

    factor    ir ao estado 129
    constant  ir ao estado 53


Estado 129

   51 term: term mul-op factor .

    DIV   reduzir usando a regra 51 (term)
    MULT  reduzir usando a regra 51 (term)
    ')'   reduzir usando a regra 51 (term)
